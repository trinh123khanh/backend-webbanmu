# üîê Script C·∫≠p Nh·∫≠t C·∫•u H√¨nh Email Gmail
# S·ª≠ d·ª•ng script n√†y ƒë·ªÉ c·∫≠p nh·∫≠t App Password m√† kh√¥ng c·∫ßn ch·ªânh s·ª≠a file tr·ª±c ti·∫øp

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  C·∫¨P NH·∫¨T C·∫§U H√åNH EMAIL GMAIL" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n
Write-Host "‚ö†Ô∏è  QUAN TR·ªåNG:" -ForegroundColor Yellow
Write-Host "   - App Password ph·∫£i l√† 16 k√Ω t·ª± (KH√îNG ph·∫£i m·∫≠t kh·∫©u Gmail th√¥ng th∆∞·ªùng)" -ForegroundColor Yellow
Write-Host "   - T·∫°o App Password t·∫°i: https://myaccount.google.com/apppasswords" -ForegroundColor Yellow
Write-Host "   - B·∫°n ph·∫£i B·∫¨T x√°c th·ª±c 2 b∆∞·ªõc tr∆∞·ªõc khi t·∫°o App Password" -ForegroundColor Yellow
Write-Host ""

# Nh·∫≠p Email
Write-Host "üìß B∆∞·ªõc 1: Nh·∫≠p ƒë·ªãa ch·ªâ Email Gmail" -ForegroundColor Green
$email = Read-Host "   Nh·∫≠p email (v√≠ d·ª•: your-email@gmail.com)"

if ([string]::IsNullOrWhiteSpace($email)) {
    Write-Host "‚ùå Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!" -ForegroundColor Red
    pause
    exit
}

# Ki·ªÉm tra ƒë·ªãnh d·∫°ng email
if ($email -notmatch "^[a-zA-Z0-9._%+-]+@gmail\.com$") {
    Write-Host "‚ö†Ô∏è  C·∫£nh b√°o: Email kh√¥ng c√≥ ƒë·ªãnh d·∫°ng @gmail.com" -ForegroundColor Yellow
    $confirm = Read-Host "   B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ti·∫øp t·ª•c? (y/n)"
    if ($confirm -ne "y") {
        Write-Host "‚ùå ƒê√£ h·ªßy!" -ForegroundColor Red
        pause
        exit
    }
}

Write-Host ""

# Nh·∫≠p App Password
Write-Host "üîë B∆∞·ªõc 2: Nh·∫≠p App Password (16 k√Ω t·ª±)" -ForegroundColor Green
Write-Host "   V√≠ d·ª•: abcdefghijklmnop (ho·∫∑c abcd efgh ijkl mnop - script s·∫Ω t·ª± x√≥a kho·∫£ng tr·∫Øng)" -ForegroundColor Gray
$appPassword = Read-Host "   Nh·∫≠p App Password" -AsSecureString
$appPasswordPlain = [Runtime.InteropServices.Marshal]::PtrToStringAuto(
    [Runtime.InteropServices.Marshal]::SecureStringToBSTR($appPassword)
)

# X√≥a kho·∫£ng tr·∫Øng
$appPasswordClean = $appPasswordPlain -replace '\s', ''

if ([string]::IsNullOrWhiteSpace($appPasswordClean)) {
    Write-Host "‚ùå App Password kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!" -ForegroundColor Red
    pause
    exit
}

if ($appPasswordClean.Length -ne 16) {
    Write-Host "‚ö†Ô∏è  C·∫£nh b√°o: App Password th∆∞·ªùng c√≥ 16 k√Ω t·ª±, b·∫°n ƒë√£ nh·∫≠p $($appPasswordClean.Length) k√Ω t·ª±" -ForegroundColor Yellow
    $confirm = Read-Host "   B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ti·∫øp t·ª•c? (y/n)"
    if ($confirm -ne "y") {
        Write-Host "‚ùå ƒê√£ h·ªßy!" -ForegroundColor Red
        pause
        exit
    }
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üìã X√ÅC NH·∫¨N TH√îNG TIN" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "Email: $email" -ForegroundColor White
Write-Host "App Password: $('*' * $appPasswordClean.Length) (ƒë√£ ·∫©n)" -ForegroundColor White
Write-Host ""

$confirm = Read-Host "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën c·∫≠p nh·∫≠t? (y/n)"
if ($confirm -ne "y") {
    Write-Host "‚ùå ƒê√£ h·ªßy!" -ForegroundColor Red
    pause
    exit
}

# ƒê·ªçc file application.yml
$configFile = "src\main\resources\application.yml"
if (-not (Test-Path $configFile)) {
    Write-Host "‚ùå Kh√¥ng t√¨m th·∫•y file: $configFile" -ForegroundColor Red
    Write-Host "   ƒê·∫£m b·∫£o b·∫°n ƒëang ch·∫°y script t·ª´ th∆∞ m·ª•c backend-webbanmu" -ForegroundColor Yellow
    pause
    exit
}

Write-Host ""
Write-Host "üîÑ ƒêang c·∫≠p nh·∫≠t c·∫•u h√¨nh..." -ForegroundColor Yellow

try {
    # ƒê·ªçc n·ªôi dung file
    $content = Get-Content $configFile -Raw
    
    # Backup file g·ªëc
    $backupFile = "src\main\resources\application.yml.backup_$(Get-Date -Format 'yyyyMMdd_HHmmss')"
    Copy-Item $configFile $backupFile
    Write-Host "‚úÖ ƒê√£ backup file g·ªëc: $backupFile" -ForegroundColor Green
    
    # C·∫≠p nh·∫≠t email
    $content = $content -replace '(?<=username:\s*\$\{MAIL_USERNAME:)[^}]+', $email
    
    # C·∫≠p nh·∫≠t password
    $content = $content -replace '(?<=password:\s*\$\{MAIL_PASSWORD:)[^}]+', $appPasswordClean
    
    # Ghi l·∫°i file
    $content | Set-Content $configFile -NoNewline
    
    Write-Host "‚úÖ ƒê√£ c·∫≠p nh·∫≠t c·∫•u h√¨nh email th√†nh c√¥ng!" -ForegroundColor Green
    Write-Host ""
    Write-Host "========================================" -ForegroundColor Cyan
    Write-Host "üìã B∆Ø·ªöC TI·∫æP THEO" -ForegroundColor Cyan
    Write-Host "========================================" -ForegroundColor Cyan
    Write-Host "1. Kh·ªüi ƒë·ªông l·∫°i server backend:" -ForegroundColor White
    Write-Host "   .\gradlew bootRun" -ForegroundColor Gray
    Write-Host ""
    Write-Host "2. Test ch·ª©c nƒÉng g·ª≠i email:" -ForegroundColor White
    Write-Host "   - T·∫°o phi·∫øu gi·∫£m gi√° c√° nh√¢n" -ForegroundColor Gray
    Write-Host "   - Ch·ªçn kh√°ch h√†ng c√≥ email" -ForegroundColor Gray
    Write-Host "   - Ki·ªÉm tra log: Get-Content logs\application.log -Tail 50 -Wait" -ForegroundColor Gray
    Write-Host ""
    Write-Host "3. Log th√†nh c√¥ng s·∫Ω hi·ªÉn th·ªã:" -ForegroundColor White
    Write-Host "   ‚úÖ Email sent successfully to: customer@example.com" -ForegroundColor Green
    Write-Host ""
    
} catch {
    Write-Host "‚ùå L·ªói khi c·∫≠p nh·∫≠t file: $_" -ForegroundColor Red
    Write-Host "   File backup ƒë√£ ƒë∆∞·ª£c t·∫°o: $backupFile" -ForegroundColor Yellow
    pause
    exit 1
}

Write-Host "üéâ Ho√†n th√†nh!" -ForegroundColor Green
Write-Host ""
pause

