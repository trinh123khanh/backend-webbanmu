package com.example.backend.service;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
@Slf4j
public class EmailService {
    
    private final JavaMailSender mailSender;
    
    @Value("${spring.mail.username:noreply@tdkstore.com}")
    private String fromEmail;
    
    @Value("${app.mail.enabled:true}")
    private boolean emailEnabled;
    
    /**
     * G·ª≠i email th√¥ng b√°o nh·∫≠n phi·∫øu gi·∫£m gi√° cho kh√°ch h√†ng
     */
    @Async
    public void sendPhieuGiamGiaNotification(String customerEmail, String customerName, String phieuCode, String phieuName) {
        if (!emailEnabled) {
            log.info("Email service is disabled. Skipping email notification.");
            return;
        }
        
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(customerEmail);
            message.setSubject("üéâ B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c phi·∫øu gi·∫£m gi√° m·ªõi!");
            
            String emailContent = String.format(
                "Xin ch√†o %s,\n\n" +
                "Ch√∫c m·ª´ng! B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c m·ªôt phi·∫øu gi·∫£m gi√° ƒë·∫∑c bi·ªát t·ª´ TDK Store.\n\n" +
                "üìå Th√¥ng tin phi·∫øu gi·∫£m gi√°:\n" +
                "- M√£ phi·∫øu: %s\n" +
                "- T√™n phi·∫øu: %s\n\n" +
                "H√£y s·ª≠ d·ª•ng phi·∫øu gi·∫£m gi√° n√†y trong l·∫ßn mua s·∫Øm ti·∫øp theo c·ªßa b·∫°n!\n\n" +
                "C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i.\n\n" +
                "Tr√¢n tr·ªçng,\n" +
                "TDK Store - B√°n m≈© b·∫£o hi·ªÉm",
                customerName, phieuCode, phieuName
            );
            
            message.setText(emailContent);
            
            mailSender.send(message);
            
            log.info("ƒê√£ g·ª≠i email th√¥ng b√°o phi·∫øu gi·∫£m gi√° t·ªõi: {}", customerEmail);
            
        } catch (Exception e) {
            log.error("L·ªói khi g·ª≠i email th√¥ng b√°o phi·∫øu gi·∫£m gi√° t·ªõi {}: {}", customerEmail, e.getMessage(), e);
            // Kh√¥ng throw exception ƒë·ªÉ kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn logic ch√≠nh
        }
    }
    
    /**
     * G·ª≠i email cho nhi·ªÅu kh√°ch h√†ng c√πng l√∫c
     */
    @Async
    public void sendPhieuGiamGiaNotificationToMultipleCustomers(
            java.util.List<String> customerEmails, 
            java.util.List<String> customerNames,
            String phieuCode, 
            String phieuName) {
        
        if (!emailEnabled) {
            log.info("Email service is disabled. Skipping bulk email notification.");
            return;
        }
        
        if (customerEmails == null || customerEmails.isEmpty()) {
            log.warn("Danh s√°ch email kh√°ch h√†ng tr·ªëng");
            return;
        }
        
        int successCount = 0;
        int failCount = 0;
        
        for (int i = 0; i < customerEmails.size(); i++) {
            try {
                String email = customerEmails.get(i);
                String name = i < customerNames.size() ? customerNames.get(i) : "Kh√°ch h√†ng";
                
                sendPhieuGiamGiaNotification(email, name, phieuCode, phieuName);
                successCount++;
                
            } catch (Exception e) {
                log.error("L·ªói khi g·ª≠i email t·ªõi {}: {}", customerEmails.get(i), e.getMessage());
                failCount++;
            }
        }
        
        log.info("Ho√†n th√†nh g·ª≠i email: {} th√†nh c√¥ng, {} th·∫•t b·∫°i", successCount, failCount);
    }
}

